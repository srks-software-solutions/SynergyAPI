@{
    ViewBag.Title = "Home Page";
}

<style>
    .jfloat {
        
        padding-left:5%;
        z-index:10;
        height: 20px;    
        width: 30px; 
        -webkit-user-select: none; 
        background-color: white; 
}  
</style>

<script src="~/Scripts/jquery-1.8.2.js"></script>

@*<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDIyOZo9GrPh8LaVcgsPtxhXQENz0tfnao&sensor=false"></script>*@

<script src="https://maps.google.com/maps/api/js?key=AIzaSyDIyOZo9GrPh8LaVcgsPtxhXQENz0tfnao&sensor=true" type="text/javascript"></script>
  

<script src="~/Scripts/oms.min.js"></script>


<!-- This css is to ensure that the google map contols (zoom bar etc) show and size correctly. -->
<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>

<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 600px;"></div>
<div class="bcgr" style="min-height:100px;min-width:1300px">
    <table>
        <tr>
            <td style="width:25px">
            <td>
                <img src="~/Content/bootstrap/img/blue.png"  style="width:30px;height:40px;"/></td>
            <td style="font-size:large">Lead Generated</td>
            <td style="width:25px">
            <td>
                <img src="~/Content/bootstrap/img/yellow.png" style="width:30px;height:40px;"/></td>
            <td style="font-size:large">OA Approved</td>           
              <td style="width:25px">
            <td>
                <img src="~/Content/bootstrap/img/red.png" style="width:30px;height:40px;"/></td>
            <td style="font-size:large">LOA Lost Order</td>
            <td style="width:25px">
            <td>
                <img src="~/Content/bootstrap/img/green.png" style="width:30px;height:40px;"/></td>
            <td style="font-size:large">Machine Invoiced</td>
        </tr>
    </table>
</div>

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">

        <script type="text/javascript">

    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens 
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var Liverpool = new google.maps.LatLng(21.0000, 78.0000);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 5,
            center: Liverpool,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);


        ////###############################################################
        //creating oms instance
        var gm = google.maps;
        var iw = new gm.InfoWindow();
        var oms = new OverlappingMarkerSpiderfier(map
          ,{ markersWontMove: true, markersWontHide: true });
             //);

        //not needed
        //var usualColor = 'eebb22';
        //var spiderfiedColor = 'ffee22';
        //var iconWithColor = function (color) {
        //    return 'http://chart.googleapis.com/chart?chst=d_map_xpin_letter&chld=pin|+|' +
        //      color + '|000000|ffff00';
        //}

        // adding shadow image
        var shadow = new gm.MarkerImage(
          'https://www.google.com/intl/en_ALL/mapfiles/shadow50.png',
          new gm.Size(37, 34),  // size   - for sprite clipping
          new gm.Point(0, 0),   // origin - ditto
         new gm.Point(10, 34)  // anchor - where to meet map location
        );


        //add events for spiderifying
        oms.addListener('click', function (marker) {
            iw.setContent(marker.desc);
            iw.open(map, marker);
        });
        oms.addListener('spiderfy', function (markers) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setIcon(iconWithColor(spiderfiedColor));
                markers[i].setShadow(null);
            }
            iw.close();
        });
        oms.addListener('unspiderfy', function (markers) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setIcon(iconWithColor(usualColor));
                markers[i].setShadow(shadow);
            }
        });

        ////###############################################################

        //For Lead Generation (BLUE)
        $.getJSON("/LeadEnquiry/LeadMapdetails", { cpid: "@ViewBag.cpid" }, function (data) {
            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
            //declare a variable to count blues
            var blues = 0;
            $.each(data, function (i, item) {
                var description = item.OrgName + item.PlaceName
                var marker = new google.maps.Marker({
                     position: new google.maps.LatLng(item.GeoLat, item.GeoLong),
                     map: map,
                     title: item.OrgName + item.PlaceName,
                     
                });
                // Make the marker-pin blue!
                marker.desc = description;
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')
                oms.addMarker(marker);
                blues = blues + 1;
                //alert("blah") //working
            });
        })

        //For OA Approval (YELLOW)
        $.getJSON("/LeadEnquiry/OAApproveMapdetails", { cpid: "@ViewBag.cpid" }, function (data) {
            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
            $.each(data, function (i, item) {
            var description = item.OrgName + item.PlaceName
                var marker = new google.maps.Marker({

                    'position': new google.maps.LatLng(item.GeoLat, item.GeoLong),
                    'map': map,
                    'title': item.OrgName + item.PlaceName
                });
                // Make the marker-pin blue!
             marker.desc = description;
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/yellow-dot.png')
             oms.addMarker(marker);
            });
        })

        // For LOA Lost Orders (RED)
        $.getJSON("/LeadEnquiry/LostOrderMapdetails", { cpid: "@ViewBag.cpid" }, function (data) {
            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
            $.each(data, function (i, item) {
             var description = item.OrgName + item.PlaceName
                var marker = new google.maps.Marker({

                    'position': new google.maps.LatLng(item.GeoLat, item.GeoLong),
                    'map': map,
                    'title': item.PlaceName
                });
                // Make the marker-pin blue!
             marker.desc = description;
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png')
             oms.addMarker(marker);
            });
        });

        //For Machine Invoiced (GREEN)
        $.getJSON("/LeadEnquiry/MachineInvoicedMapdetails", { cpid: "@ViewBag.cpid" }, function (data) {
            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
            $.each(data, function (i, item) {
             var description = item.OrgName + item.PlaceName
                var marker = new google.maps.Marker({

                    'position': new google.maps.LatLng(item.GeoLat, item.GeoLong),
                    'map': map,
                    'title': item.OrgName + item.PlaceName
                });
                // Make the marker-pin blue!
             marker.desc = description;
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')
             oms.addMarker(marker);
            });
        })



        //############################
        // for debugging/exploratory use in console
        window.map = map;
        window.oms = oms;
        //###########################
    }

        </script>
    </section>
}
