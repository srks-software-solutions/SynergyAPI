@model SRKSSynergy.Models.Outward
@{
    ViewBag.Title = "Create Outward";
}

<link href="~/Content/bootstrap/css/bootstrap-responsive.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/bootstrap.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/MDB.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/jquery-min.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/jquery.ui.autocomplete.css" rel="stylesheet" />
@*<script src="~/Content/bootstrap/js/jquery.js"></script>*@
@*<script src="~/Content/bootstrap/js/jquery-ui.js"></script>*@
<script src="~/Content/bootstrap/js/jquery1.8.2.min.js"></script>
<script src="~/Content/bootstrap/js/jQuery%20UI%201.9.2.js"></script>
@*<script src="~/Content/bootstrap/js/bootstrap.js"></script>*@
<script src="~/Content/bootstrap/js/accounting.js"></script>
<script src="~/Content/bootstrap/js/jquery-ui-min.js"></script>
<script src="~/Content/bootstrap/js/bootstrap-datepicker.js"></script>
<script src="~/Content/bootstrap/js/jquery.mtz.monthpicker.js"></script>
<style>
    .validation-summary-valid {
        display: none;
    }
</style>
<script>
    $(document).ready(function () {
        $('#startdate1').monthpicker();

    });
    $(document).ready(function () {
        $('#startdate2').monthpicker();

    });
    $(document).ready(function () {
        $('#startdate3').monthpicker();

    });
    $(document).ready(function () {
        $('#startdate4').monthpicker();

    });
    $(document).ready(function () {
        $('#startdate5').monthpicker();

    });
</script>

@* Auto Complete for customer unique id *@
<script type="text/javascript">
    $(document).ready(function () {
        $("#custuname1").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Outward/Autocompletecust",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.OrganizationName, value: item.OrganizationName };
                        }))
                        var cname1 = $("#custuname1").val('');
                        var cname = $("#custuname1").val('');
                        if (cname1 == cname)
                            alert('a');
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#custuname2").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Outward/Autocompletecust",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.OrganizationName, value: item.OrganizationName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#custuname3").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Outward/Autocompletecust",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.OrganizationName, value: item.OrganizationName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#custuname4").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Outward/Autocompletecust",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.OrganizationName, value: item.OrganizationName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
    $(document).ready(function () {
        $("#custuname5").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Outward/Autocompletecust",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.OrganizationName, value: item.OrganizationName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
</script>

@{
    List<SelectListItem> listItems1 = new List<SelectListItem>();
    listItems1.Add(new SelectListItem
    {
        Text = "1",
        Value = "1"
    });
    listItems1.Add(new SelectListItem
    {
        Text = "2",
        Value = "2",
    });
    listItems1.Add(new SelectListItem
    {
        Text = "3",
        Value = "3"
    });
    listItems1.Add(new SelectListItem
    {
        Text = "4",
        Value = "4"
    });
    listItems1.Add(new SelectListItem
    {
        Text = "5",
        Value = "5"
    });
    listItems1.Add(new SelectListItem
    {
        Text = "6",
        Value = "6"
    });
    listItems1.Add(new SelectListItem
    {
        Text = "7",
        Value = "7"
    });
    listItems1.Add(new SelectListItem
    {
        Text = "8",
        Value = "8"
    });
    listItems1.Add(new SelectListItem
    {
        Text = "9",
        Value = "9"
    });
    listItems1.Add(new SelectListItem
    {
        Text = "10",
        Value = "10"
    });
}

<div class="bcgr" style="min-height: 590px">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        if (TempData["Success"] != null)
		{
			<p style="color: red; font-weight: 900; padding-left: 170px">@TempData["Success"]</p>
		}
        <div style="background: gray; padding-bottom: 25px">
            <p class="txtft">Create Outward Invoice Spare</p>
        </div>
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <label class="control-label fntst">Line1</label>
                <div class="span12">
                    <label class="control-label" style="color: red">@ViewBag.NotInwarded</label>
                    <div class="span1">
                        <div class="control-group">

                            <label class="control-label fntst">Month</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare1.OutwardMonth, new { @id = "startdate1", @name = "startdate1", @placeholder = "Select Month", @class = "fntst date-picker", @style = "width:100px", @required = "required" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare1.OutwardMonth)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Order Number</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare1.OrderNo, new { @id = "equip1", @maxlength = "20", @class = "fntst", @placeholder = "Order Number", @style = "width:100px", @required = "required" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare1.OrderNo)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Customer Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare1.CustomerName, new { @id = "custuname1", @maxlength = "20", @class = "fntst", @placeholder = "Customer Name", style = "width:100px", @required = "required" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare1.CustomerName)
                               <input type="text" class="fntst" id="custuname1" name="custuname1" value="ViewBag.custname" readonly="true" style = "display:none"> 
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Item Code</label>
                            <div class="controls">

                                @Html.DropDownListFor(model => model.OutwardSpare1.ProductModelSparesID, (SelectList)ViewData["SparesID"], "--Select Item Code--", new { @id = "exclu1", @maxlength = "16", @class = "input fntst", @placeholder = "Equipment Exclusions", @style = "width:150px" })
                                @Html.TextBoxFor(model => model.OutwardSpare1.ProductModelSparesID, new { @id = "ItemId1", @style = "display:none" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare1.ProductModelSparesID)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Present Stock</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="presentstock1" name="presentstock1" readonly="true" style="width: 100px">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="padding-left: 30px">
            <div class="rowgrid">
                <div class="span12">

                    <div class="span2">

                        <div class="control-group">
                            <label class="control-label fntst">Item Description</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="desc1" name="desc1" style="width: 200px;" disabled="disabled" placeholder="Item Description">
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Quantity</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare1.Quantity, new { @id = "Quantity1", @maxlength = "20", @class = "fntst", @style = "width:100px", @required = "required" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare1.Quantity)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Agent Price</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="Agent1" name="Agent1" style="width: 100px" placeholder="Agent price",readonly = "readonly">
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Total Value</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare1.TotalValue, new { @id = "TotVal1", @maxlength = "20", @class = "fntst", @placeholder = "Total Value", @style = "width:100px", @readonly = "readonly" })

                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">InvoiceNo</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare1.InvoiceNo, new { @id = "Invoiceno1", @maxlength = "20", @class = "fntst", @placeholder = "Invoice No", @style = "width:100px", @required = "required" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare1.InvoiceNo)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>      
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <div class="span12">
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Invoice Date</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare1.InvoiceDate, new { @id = "InvoiceDate1", @class = " fntst sss", @placeholder = "Select Date", @required = "required" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare1.InvoiceDate)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Dispatch Date</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare1.DispatchDate, new { @id = "DispatchDate1", @class = " fntst sss", @placeholder = "Select Date", @required = "required" })
                                 @Html.ValidationMessageFor(model => model.OutwardSpare1.DispatchDate)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Remarks</label>
                            <div class="controls">
                                @Html.TextAreaFor(model => model.OutwardSpare1.Remarks, new { @id = "remarks1", @maxlength = "20", @class = "input-large fntst", @placeholder = "Remarks" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>                          
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <label class="control-label fntst">Line2</label>
                <div class="span12">
                    <label class="control-label" style="color: red">@ViewBag.NotInwarded</label>
                    <div class="span1">
                        <div class="control-group">
                            <label class="control-label fntst">Month</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare2.OutwardMonth, new { @id = "startdate2", @name = "startdate2", @placeholder = "Select Month", @class = "fntst date-picker", @style = "width:100px"})
                                @Html.ValidationMessageFor(model => model.OutwardSpare2.OutwardMonth)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Order Number</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare2.OrderNo, new { @id = "equip2", @maxlength = "20", @class = "fntst", @placeholder = "Order Number", @style = "width:100px"})
                                @Html.ValidationMessageFor(model => model.OutwardSpare2.OrderNo)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Customer Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare2.CustomerName, new { @id = "custuname2", @maxlength = "20", @class = "fntst", @placeholder = "Customer Name", style = "width:100px"})
                                @Html.ValidationMessageFor(model => model.OutwardSpare2.CustomerName)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Item Code</label>
                            <div class="controls">

                                @Html.DropDownListFor(model => model.OutwardSpare2.ProductModelSparesID, (SelectList)ViewData["SparesID"], "--Select Item Code--", new { @id = "exclu2", @maxlength = "16", @class = "input fntst", @placeholder = "Equipment Exclusions", @style = "width:150px" })
                                @Html.TextBoxFor(model => model.OutwardSpare2.ProductModelSparesID, new { @id = "ItemId2", @style = "display:none" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare2.ProductModelSparesID)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Present Stock</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="presentstock2" name="presentstock2" readonly="true" style="width: 100px">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>           
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <div class="span12">
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Item Description</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="desc2" name="desc2" style="width: 200px;" disabled="disabled" placeholder="Item Description">
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Quantity</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare2.Quantity, new { @id = "Quantity2", @maxlength = "20", @class = "fntst", @style = "width:100px"})
                                @Html.ValidationMessageFor(model => model.OutwardSpare2.Quantity)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Agent Price</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="Agent2" name="Agent2" disabled="disabled" placeholder="Agent price" style="width: 100px">
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Total Value</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare2.TotalValue, new { @id = "TotVal2", @maxlength = "20", @class = "fntst", @placeholder = "Total Value", @readonly = "readonly", @style = "width:100px" })

                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">InvoiceNo</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare2.InvoiceNo, new { @id = "Invoiceno2", @maxlength = "20", @class = "fntst", @placeholder = "Invoice No", @style = "width:100px"})
                                @Html.ValidationMessageFor(model => model.OutwardSpare2.InvoiceNo)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <div class="span12">
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Invoice Date</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare2.InvoiceDate, new { @id = "InvoiceDate2", @class = " fntst sss", @placeholder = "Select Date"})
                                  @Html.ValidationMessageFor(model => model.OutwardSpare2.InvoiceDate)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Dispatch Date</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare2.DispatchDate, new { @id = "DispatchDate2", @class = " fntst sss", @placeholder = "Select Date" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare2.DispatchDate)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Remarks</label>
                            <div class="controls">
                                @Html.TextAreaFor(model => model.OutwardSpare2.Remarks, new { @id = "remarks2", @maxlength = "20", @class = "input-large fntst", @placeholder = "Remarks" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>     
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <label class="control-label fntst">Line3</label>
                <div class="span12">
                    <label class="control-label" style="color: red">@ViewBag.NotInwarded</label>
                    <div class="span1">
                        <div class="control-group">

                            <label class="control-label fntst">Month</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare3.OutwardMonth, new { @id = "startdate3", @name = "startdate3", @placeholder = "Select Month", @class = "fntst date-picker", @style = "width:100px" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare3.OutwardMonth)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Order Number</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare3.OrderNo, new { @id = "equip3", @maxlength = "20", @class = "fntst", @placeholder = "Order Number", @style = "width:100px" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare3.OrderNo)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Customer Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare3.CustomerName, new { @id = "custuname3", @maxlength = "20", @class = "fntst", @placeholder = "Customer Name", style = "width:100px" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare3.CustomerName)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Item Code</label>
                            <div class="controls">
                                @Html.DropDownListFor(model => model.OutwardSpare3.ProductModelSparesID, (SelectList)ViewData["SparesID"], "--Select Item Code--", new { @id = "exclu3", @maxlength = "16", @class = "input fntst", @placeholder = "Equipment Exclusions", @style = "width:150px" })
                                @Html.TextBoxFor(model => model.OutwardSpare3.ProductModelSparesID, new { @id = "ItemId3", @style = "display:none" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare3.ProductModelSparesID)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Present Stock</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="presentstock3" name="presentstock3" readonly="true" style="width: 100px">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>        
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <div class="span12">
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Item Description</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="desc3" name="desc" style="width: 200px;" disabled="disabled" placeholder="Item Description">
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Quantity</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare3.Quantity, new { @id = "Quantity3", @maxlength = "20", @class = "fntst", @style = "width:100px" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare3.Quantity)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Agent Price</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="Agent3" name="Agent3" disabled="disabled" placeholder="Agent price" style="width: 100px">
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Total Value</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare3.TotalValue, new { @id = "TotVal3", @maxlength = "20", @class = "fntst", @placeholder = "Total Value", @readonly = "readonly", @style = "width:100px" })

                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">InvoiceNo</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare3.InvoiceNo, new { @id = "Invoiceno3", @maxlength = "20", @class = "fntst", @placeholder = "Invoice No", @style = "width:100px"})
                                @Html.ValidationMessageFor(model => model.OutwardSpare3.InvoiceNo)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>    
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <div class="span12">
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Invoice Date</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare3.InvoiceDate, new { @id = "InvoiceDate3", @class = " fntst sss", @placeholder = "Select Date"})
                                 @Html.ValidationMessageFor(model => model.OutwardSpare3.InvoiceDate)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Dispatch Date</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare3.DispatchDate, new { @id = "DispatchDate3", @class = " fntst sss", @placeholder = "Select Date" })
                                 @Html.ValidationMessageFor(model => model.OutwardSpare3.DispatchDate)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Remarks</label>
                            <div class="controls">
                                @Html.TextAreaFor(model => model.OutwardSpare3.Remarks, new { @id = "remarks3", @maxlength = "20", @class = "input-large fntst", @placeholder = "Remarks" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>   
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <label class="control-label fntst">Line4</label>
                <div class="span12">
                    <label class="control-label" style="color: red">@ViewBag.NotInwarded</label>
                    <div class="span1">
                        <div class="control-group">

                            <label class="control-label fntst">Month</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare4.OutwardMonth, new { @id = "startdate4", @name = "startdate4", @placeholder = "Select Month", @class = "fntst date-picker", @style = "width:100px" })
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Order Number</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare4.OrderNo, new { @id = "equip4", @maxlength = "20", @class = "fntst", @placeholder = "Order Number", @style = "width:100px"})
                                @Html.ValidationMessageFor(model => model.OutwardSpare4.OrderNo)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Customer Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare4.CustomerName, new { @id = "custuname4", @maxlength = "20", @class = "fntst", @placeholder = "Customer Name", style = "width:100px"})
                                @Html.ValidationMessageFor(model => model.OutwardSpare4.CustomerName)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Item Code</label>
                            <div class="controls">
                                @Html.DropDownListFor(model => model.OutwardSpare4.ProductModelSparesID, (SelectList)ViewData["SparesID"], "--Select Item Code--", new { @id = "exclu4", @maxlength = "16", @class = "input fntst", @placeholder = "Equipment Exclusions", @style = "width:150px" })
                                @Html.TextBoxFor(model => model.OutwardSpare4.ProductModelSparesID, new { @id = "ItemId4", @style = "display:none" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare1.ProductModelSparesID)
                                <input />
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Present Stock</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="presentstock4" name="presentstock4" readonly="true" style="width: 100px">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <div class="span12">
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Item Description</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="desc4" name="desc4" style="width: 200px;" disabled="disabled" placeholder="Item Description">
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Quantity</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare4.Quantity, new { @id = "Quantity4", @maxlength = "20", @class = "fntst", @style = "width:100px" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare4.Quantity)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Agent Price</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="Agent4" name="Agent4" placeholder="Agent price" style="width: 100px", readonly = "readonly">
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Total Value</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare4.TotalValue, new { @id = "TotVal4", @maxlength = "20", @class = "fntst", @placeholder = "Total Value", @readonly = "readonly", @style = "width:100px" })
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">InvoiceNo</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare4.InvoiceNo, new { @id = "Invoiceno4", @maxlength = "20", @class = "fntst", @placeholder = "Invoice No", @style = "width:100px" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare4.InvoiceNo)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <div class="span12">
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Invoice Date</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare4.InvoiceDate, new { @id = "InvoiceDate4", @class = " fntst sss", @placeholder = "Select Date" })
                               @Html.ValidationMessageFor(model => model.OutwardSpare4.InvoiceDate)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Dispatch Date</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare4.DispatchDate, new { @id = "DispatchDate4", @class = " fntst sss", @placeholder = "Select Date" })
                                 @Html.ValidationMessageFor(model => model.OutwardSpare4.DispatchDate)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Remarks</label>
                            <div class="controls">
                                @Html.TextAreaFor(model => model.OutwardSpare4.Remarks, new { @id = "remarks4", @maxlength = "20", @class = "input-large fntst", @placeholder = "Remarks" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>        
        <div class="row" style="padding-left: 30px">
            <div class=" rowgrid">
                <label class="control-label fntst">Line5</label>
                <div class="span12">
                    <label class="control-label" style="color: red">@ViewBag.NotInwarded</label>
                    <div class="span1">
                        <div class="control-group">
                            <label class="control-label fntst">Month</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare5.OutwardMonth, new { @id = "startdate5", @name = "startdate5", @placeholder = "Select Month", @class = "fntst date-picker", @style = "width:100px" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare5.OutwardMonth)
                            </div>
                        </div>
                    </div>
                    <div class="span1"></div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Order Number</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare5.OrderNo, new { @id = "equip5", @maxlength = "20", @class = "fntst", @placeholder = "Order Number", @style = "width:100px"})
                                @Html.ValidationMessageFor(model => model.OutwardSpare5.OrderNo)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Customer Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.OutwardSpare5.CustomerName, new { @id = "custuname5", @maxlength = "20", @class = "fntst", @placeholder = "Customer Name", style = "width:100px" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare5.CustomerName)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Item Code</label>
                            <div class="controls">
                                @Html.DropDownListFor(model => model.OutwardSpare5.ProductModelSparesID, (SelectList)ViewData["SparesID"], "--Select Item Code--", new { @id = "exclu5", @maxlength = "16", @class = "input fntst", @placeholder = "Equipment Exclusions", @style = "width:150px" })
                                @Html.TextBoxFor(model => model.OutwardSpare5.ProductModelSparesID, new { @id = "ItemId5", @style = "display:none" })
                                @Html.ValidationMessageFor(model => model.OutwardSpare5.ProductModelSparesID)
                            </div>
                        </div>
                    </div>
                    <div class="span2">
                        <div class="control-group">
                            <label class="control-label fntst">Present Stock</label>
                            <div class="controls">
                                <input type="text" class="fntst" id="presentstock5" name="presentstock5" readonly="true" style="width: 100px">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
          </div>
            <div class="row" style="padding-left: 30px">
                <div class=" rowgrid">
                    <div class="span12">
                        <div class="span2">
                            <div class="control-group">
                                <label class="control-label fntst">Item Description</label>
                                <div class="controls">
                                    <input type="text" class="fntst" id="desc5" name="desc5" style="width: 200px;" disabled="disabled" placeholder="Item Description">
                                </div>
                            </div>
                        </div>
                        <div class="span1"></div>
                        <div class="span2">
                            <div class="control-group">
                                <label class="control-label fntst">Quantity</label>
                                <div class="controls">
                                    @Html.TextBoxFor(model => model.OutwardSpare5.Quantity, new { @id = "Quantity5", @maxlength = "20", @class = "fntst", @style = "width:100px"})
                                    @Html.ValidationMessageFor(model => model.OutwardSpare5.Quantity)
                                </div>
                            </div>
                        </div>
                        <div class="span2">
                            <div class="control-group">
                                <label class="control-label fntst">Agent Price</label>
                                <div class="controls">
                                    <input type="text" class="fntst" id="Agent5" name="Agent5" placeholder="Agent price" style="width: 100px",readonly = "readonly">
                                </div>
                            </div>
                        </div>
                        <div class="span2">
                            <div class="control-group">
                                <label class="control-label fntst">Total Value</label>
                                <div class="controls">
                                    @Html.TextBoxFor(model => model.OutwardSpare5.TotalValue, new { @id = "TotVal5", @maxlength = "20", @class = "fntst", @placeholder = "Total Value", @readonly = "readonly", @style = "width:100px" })
                                </div>
                            </div>
                        </div>
                        <div class="span2">
                            <div class="control-group">
                                <label class="control-label fntst">InvoiceNo</label>
                                <div class="controls">
                                    @Html.TextBoxFor(model => model.OutwardSpare5.InvoiceNo, new { @id = "Invoiceno5", @maxlength = "20", @class = "fntst", @placeholder = "Invoice No", @style = "width:100px"})
                                    @Html.ValidationMessageFor(model => model.OutwardSpare5.InvoiceNo)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
       <div class="row" style="padding-left: 30px">
                <div class=" rowgrid">
                    <div class="span12">
                        <div class="span2">
                            <div class="control-group">
                                <label class="control-label fntst">Invoice Date</label>
                                <div class="controls">
                                    @Html.TextBoxFor(model => model.OutwardSpare5.InvoiceDate, new { @id = "InvoiceDate5", @class = " fntst sss", @placeholder = "Select Date"})
                                    @Html.ValidationMessageFor(model => model.OutwardSpare5.InvoiceDate)
                                </div>
                            </div>
                        </div>
                        <div class="span1"></div>
                        <div class="span2">
                            <div class="control-group">
                                <label class="control-label fntst">Dispatch Date</label>
                                <div class="controls">
                                    @Html.TextBoxFor(model => model.OutwardSpare5.DispatchDate, new { @id = "DispatchDate5", @class = " fntst sss", @placeholder = "Select Date"})
                                     @Html.ValidationMessageFor(model => model.OutwardSpare5.DispatchDate)
                                </div>
                            </div>
                        </div>
                        <div class="span1"></div>
                        <div class="span2">
                            <div class="control-group">
                                <label class="control-label fntst">Remarks</label>
                                <div class="controls">
                                    @Html.TextAreaFor(model => model.OutwardSpare5.Remarks, new { @id = "remarks5", @maxlength = "20", @class = "input-large fntst", @placeholder = "Remarks"})
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="span10 pad ">

                        <div class="span3 cent" style="padding-left: 2%">
			    <button class="btn btn-success " style="display: inline;">@Html.ActionLink(" Back_to_List", "Index","Outward", new { @Style="color:white;text-decoration:none"})</button>
            </div>
                        <div class="span3 cent" style="padding-left: 10%">
                            <button class="btn btn-success" value="create" type="submit">Save Outward</button>
                        </div>
                        <p style="color: red; font-family: Calibri; font-size: 18px; font-weight: 900">
                            @Html.Label("", Convert.ToString((string)ViewBag.Duplicate))
                        </p>
                       
                    </div>
                </div>
            </div>
        
                            	
    }
</div>
<style>
    .ui-datepicker-calendar {
        display: none;
    }
</style>
<script>
    var item = new Array();  
    $("#exclu1").change(function (evt) {
        {
            $("#desc1").val('-- Item Description --');
            $("#Agent1").val('');
            $("#exclu1").attr("disabled", false);
            var selectedID1 = $("#exclu1 option:selected").val();
            for (i = 0; i < item.length; i++) {
                if (item[i] == selectedID1)
                    alert('Select Differnt Item Code');
            }
            item.push(selectedID1);
          
            $.getJSON("/Outward/GetItemDescription", { ID: selectedID1 }, function (data) {
                //Assiginig Values of Unit Price Description & Exclusion After Selecting Model
                $("#presentstock1").val(data.presentstock);
                $("#desc1").val(data.Desc);            
                $("#Agent1").val(accounting.formatMoney(data.unitprice));
                $("#Quantity1").attr("disabled", false);
                var stock1 = $("#presentstock1").val();
                if (stock1 == 0)
                    alert("This Particular Item is not inwarded");           
                $("#TotVal1").val(' ');
                //$("#Quantity1").val(' ');
                //$.getJSON("/Outward/GetCustomername", { ID: selectedID1 }, function (data) {
                  
                //    if (cname1 == $("#custuname1").val(data.customername));
                //    alert('hi')
                //});
            });
        }
    });

    $("#exclu2").change(function (evt) {
        {
            $("#desc2").val('-- Item Description --');
            $("#Agent2").val('');
            $("#exclu2").attr("disabled", false);
            var selectedID2 = $("#exclu2 option:selected").val();
            for (i = 0; i < item.length; i++) {
                if (item[i] == selectedID2)
                    alert('Select Differnt Item Code');
            }
            item.push(selectedID2);
            
            $.getJSON("/Outward/GetItemDescription", { ID: selectedID2 }, function (data) {
                //Assiginig Values of Unit Price Description & Exclusion After Selecting Model
                $("#presentstock2").val(data.presentstock);
                $("#desc2").val(data.Desc);
                $("#Agent2").val(accounting.formatMoney(data.unitprice));
                $("#quantity2").attr("disabled", false);
                var stock2 = $("#presentstock2").val();
                if (stock2 == 0)
                    alert("This Particular Item is not inwarded");
                $("#TotVal2").val(' ');
                // $("#Quantity2").val(' ');
            });
        }
    });
    $("#exclu3").change(function (evt) {
        {
            $("#desc3").val('-- Item Description --');
            $("#Agent3").val('');
            $("#exclu3").attr("disabled", false);
            var selectedID3 = $("#exclu3 option:selected").val();
            for (i = 0; i < item.length; i++) {
                if (item[i] == selectedID3)
                    alert('Select Differnt Item Code');
            }
            item.push(selectedID3);
           
            $.getJSON("/Outward/GetItemDescription", { ID: selectedID3 }, function (data) {
                //Assiginig Values of Unit Price Description & Exclusion After Selecting Model
                $("#presentstock3").val(data.presentstock);
                $("#desc3").val(data.Desc);
                $("#Agent3").val(accounting.formatMoney(data.unitprice));
                $("#quantity3").attr("disabled", false);
                var stock3 = $("#presentstock3").val();
                if (stock3 == 0)
                    alert("This Particular Item is not inwarded");
                $("#TotVal3").val(' ');
                //  $("#Quantity3").val(' ');
            });
        }
    });
    $("#exclu4").change(function (evt) {
        {
            $("#desc4").val('-- Item Description --');
            $("#Agent4").val('');
            $("#exclu4").attr("disabled", false);
            var selectedID4 = $("#exclu4 option:selected").val();
            for (i = 0; i < item.length; i++) {
                if (item[i] == selectedID4)
                    alert('Select Differnt Item Code');
            }
           
            $.getJSON("/Outward/GetItemDescription", { ID: selectedID4 }, function (data) {
                //Assiginig Values of Unit Price Description & Exclusion After Selecting Model
                $("#presentstock4").val(data.presentstock);
                $("#desc4").val(data.Desc);
                $("#Agent4").val(accounting.formatMoney(data.unitprice));
                $("#quantity4").attr("disabled", false);
                var stock4 = $("#presentstock4").val();
                if (stock4 == 0)
                    alert("This Particular Item is not inwarded");
                $("#TotVal4").val(' ');
                //  $("#Quantity4").val(' ');
            });
        }
    });
    $("#exclu5").change(function (evt) {
        {
            $("#desc5").val('-- Item Description --');
            $("#Agent5").val('');
            $("#exclu5").attr("disabled", false);
            var selectedID5 = $("#exclu5 option:selected").val();
            for (i = 0; i < item.length; i++) {
                if (item[i] == selectedID5)
                    alert('Select Differnt Item Code');
            }
            item.push(selectedID5);
            
            $.getJSON("/Outward/GetItemDescription", { ID: selectedID5 }, function (data) {
                //Assiginig Values of Unit Price Description & Exclusion After Selecting Model
                $("#presentstock5").val(data.presentstock);
                $("#desc5").val(data.Desc);
                $("#Agent5").val(accounting.formatMoney(data.unitprice));
                $("#quantity5").attr("disabled", false);
                var stock5 = $("#presentstock5").val();
                if (stock5 == 0)
                    alert("This Particular Item is not inwarded");
                $("#TotVal5").val(' ');
                // $("#Quantity5").val(' ');
            });
        }
    });
</script>
<script>
    $("#Quantity1").change(function (evt) {
        var passval = $("#Quantity1").val();
        var unitprice = $("#Agent1").val();
        var stk1 = $("#presentstock1").val();
        if (stk1 < passval)
            alert("No sufficient stock available for the selected spare");
        if (accounting.unformat(unitprice) != null || accounting.unformat(unitprice) != "" || accounting.unformat(unitprice) != 0) {
            var totalprice = passval * accounting.unformat(unitprice);
            $("#TotVal1").val(accounting.formatMoney(totalprice));
            $('#TotVal1').value = "";
        }
    });
    $("#Quantity2").change(function (evt) {
        var passval1 = $("#Quantity2").val();
        var unitprice = $("#Agent2").val();
        var stk2 = $("#presentstock2").val();
        if (stk2 < passval1)
            alert("No sufficient stock available for the selected spare");
        if (accounting.unformat(unitprice) != null || accounting.unformat(unitprice) != "" || accounting.unformat(unitprice) != 0) {
            var totalprice = passval1 * accounting.unformat(unitprice);
            $("#TotVal2").val(accounting.formatMoney(totalprice));
            $('#TotVal2').value = "";
        }
    });
    $("#Quantity3").change(function (evt) {
        var passval2 = $("#Quantity3").val();
        var unitprice = $("#Agent3").val();
        var stk3 = $("#presentstock3").val();
        if (stk3 < passval2)
            alert("No sufficient stock available for the selected spare");
        if (accounting.unformat(unitprice) != null || accounting.unformat(unitprice) != "" || accounting.unformat(unitprice) != 0) {
            var totalprice = passval2 * accounting.unformat(unitprice);
            $("#TotVal3").val(accounting.formatMoney(totalprice));
            $('#TotVal3').value = "";
        }
    });
    $("#Quantity4").change(function (evt) {
        var passval3 = $("#Quantity4").val();
        var unitprice = $("#Agent4").val();
        var stk4 = $("#presentstock4").val();
        if (stk4 < passval3)
            alert("No sufficient stock available for the selected spare");
        if (accounting.unformat(unitprice) != null || accounting.unformat(unitprice) != "" || accounting.unformat(unitprice) != 0) {
            var totalprice = passval3 * accounting.unformat(unitprice);
            $("#TotVal4").val(accounting.formatMoney(totalprice));
            $('#TotVal4').value = "";
        }
    });
    $("#Quantity5").change(function (evt) {
        var passval5 = $("#Quantity5").val();
        var unitprice = $("#Agent5").val();
        var stk5 = $("#presentstock5").val();
        if (stk5 < passval5)
            alert("No sufficient stock available for the selected spare");
        if (accounting.unformat(unitprice) != null || accounting.unformat(unitprice) != "" || accounting.unformat(unitprice) != 0) {
            var totalprice = passval5 * accounting.unformat(unitprice);
            $("#TotVal5").val(accounting.formatMoney(totalprice));
            $('#TotVal5').value = "";
        }
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        var now = new Date();
        var mon = now.getMonth() + 1;
        if (mon < 10)
            mon = "0" + mon;
        var dat = now.getDate();
        if (dat < 10)
            dat = "0" + dat;
        var today = now.getFullYear() + '/' + mon + '/' + dat;
        var tod = now.getFullYear() + '-' + mon + '-' + dat;
        $('.sss').val(today);
        $('.sss').datepicker({
            format: 'yyyy-mm-dd',
            onRender: function (date) {
                return date.valueOf() > now.valueOf() ? 'disabled' : '';
            }
        }).on('changeDate', function (ev) {
            $(this).datepicker('hide');
        });
    });
</script>

