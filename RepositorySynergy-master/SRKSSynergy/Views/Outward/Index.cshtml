@model IEnumerable<SRKSSynergy.Models.OutwardSpare>

@{
    ViewBag.Title = "Outward Spare";
    int slno = 1;
}

@* Paging & Sorting Code  *@

@helper buildLinks(int start, int end, string innerContent)
{
    for (int i = start; i <= end; i++)
    {
    <a class="@(i == ViewBag.CurrentPage ? "current" : "")"  href="@Url.Action("Index", "Outward", new { page = i, sortBy = ViewBag.sortBy, isAsc = ViewBag.isAsc.ToString().ToLower(), search = ViewBag.Search })">@(innerContent ?? i.ToString())</a>      
    }
    
}


@*@helper pageLinks()
{
    const int maxPages = 11;

    if (ViewBag.TotalPages <= maxPages)
    {
    @buildLinks(1, (int)ViewBag.TotalPages, null)
        return;
    }

    int pagesAfter = ViewBag.TotalPages - ViewBag.CurrentPage; // Number of pages after current
    int pagesBefore = ViewBag.CurrentPage - 1; // Number of pages before current

    if (pagesAfter <= 4)
    {
    @buildLinks(1, 1, null) // Show 1st page

        int pageSubset = ViewBag.TotalPages - maxPages - 1 > 1 ? ViewBag.TotalPages - maxPages - 1 : 2;
    @buildLinks(pageSubset, pageSubset, "...") // Show page subset (...)

    @buildLinks(ViewBag.TotalPages - maxPages + 3, ViewBag.TotalPages, null) // Show last pages

        return; // Exit
    }

    if (pagesBefore <= 4)
    {
    @buildLinks(1, maxPages - 2, null) // Show 1st pages


        int pageSubset = maxPages + 2 < ViewBag.TotalPages ? maxPages + 2 : ViewBag.TotalPages - 1;
    @buildLinks(pageSubset, pageSubset, "...") // Show page subset (...)

    @buildLinks(ViewBag.TotalPages, ViewBag.TotalPages, null) // Show last page

        return; // Exit

    }

    if (pagesAfter > 4)
    {
    @buildLinks(1, 1, null) // Show 1st pages

        int pageSubset1 = ViewBag.CurrentPage - 7 > 1 ? ViewBag.CurrentPage - 7 : 2;
        int pageSubset2 = ViewBag.CurrentPage + 7 < ViewBag.TotalPages ? ViewBag.CurrentPage + 7 : ViewBag.TotalPages - 1;

    @buildLinks(pageSubset1, pageSubset1, pageSubset1 == ViewBag.CurrentPage - 4 ? null : "...") // Show 1st page subset (...)

    @buildLinks(ViewBag.CurrentPage - 3, ViewBag.CurrentPage + 3, null) // Show middle pages

        // Show 2nd page subset (...)
        // only show ... if page is contigous to the previous one.
    @buildLinks(pageSubset2, pageSubset2, pageSubset2 == ViewBag.CurrentPage + 4 ? null : "...")
    @buildLinks(ViewBag.TotalPages, ViewBag.TotalPages, null) // Show last page

        return; // Exit

    }    
}
*@
@helper sortLink(string name, int id)
{
    <a href="@Url.Action("Index", "Outward", new { sortby = id, isasc = (id == ViewBag.sortBy ? (!@ViewBag.isAsc).ToString().ToLower() : true) })">@name</a> 
    if (id == ViewBag.sortBy)
    {
    <span class="arrow @(ViewBag.isAsc ? "up" : "down")"></span>
    }
}

@* End Of Paging & Sorting Code *@

<link href="~/Content/bootstrap/css/bootstrap.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/bootstrap-responsive.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/MDB.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/jquery.ui.autocomplete.css" rel="stylesheet" />
<script src="~/Content/bootstrap/js/jquery.js"></script>
<script src="~/Content/bootstrap/js/jquery-ui.js"></script>
<script src="~/Content/bootstrap/js/jquery1.8.2.min.js"></script>
<script src="~/Content/bootstrap/js/jQuery%20UI%201.9.2.js"></script>

<!-- glyphicons help -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">


<script type="text/javascript">
    $(document).ready(function () {
        $("#custnm").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Outward/Autocompletecust",
                    type: "POST",
                    dataType: "json",
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.OrganizationName, value: item.OrganizationName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
</script>
<div class="bcgr" style="min-height:590px;min-width:1410px">
    <div style="background: gray; padding-bottom: 15px">
        <p class="txtft">Outward Spare</p>
    </div>
    <form action="@Url.Action("Index", "Outward")" method="post">
        @* Searching for a particular Model view *@
        <div class="row">
            <div class=" row show-grid">
                @* Text Box for search *@
                <div class="span12 pad ">
                    <div class="span3 ">
                        <div class="control-group ">
                            @*<label class="control-label fntst ">Customer Name</label>*@
                            <div class="controls" style="padding-left: 70px; padding-top: 23px">
                                @*<input type="text" class="fntst excus" value="@ViewBag.Search" id="equipname" name="equipname" placeholder="Equipment Name">*@
                                @Html.TextBox("custnm", null, new {@style="height:30px", @placeholder="Search for Customer Name"})
                            </div>
                        </div>
                    </div>
                    @*<div class="span"></div>*@
                    @* Button for Search *@
                    <div class="span3" style="padding-top:20px">
                            @*<input type="submit" style="width: 70px;height:35px" value="Search" class="btn btn-info" />*@
                        <button class="btn btn-success glyphicon glyphicon-search  " value="post" type="submit"> Search</button>
                    </div>
                    @* End of buttons *@
                    <span id="rData"></span>
                </div>
            </div>
        </div>

        @* Table for Equipment *@
        <table class="table table-hover" style="width: 95%;margin-left:1%">
            <tr style="background: #BBBEBD; padding-bottom: 10px; padding-top: 10px">
                <th style="width: 80px; text-align: center">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Serial No.</span>
                </th>
                <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Month</span>
                </th>
                                <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Customer</span>
                </th>
                           <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Order No</span>
                </th>
                                <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">ItemCode</span>
                </th>

                <th style="width: 70px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    @Html.DisplayNameFor(model => model.ProductModelSpare.ProductModelSparesDesc)
                </th>
                <th style="width: 70px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">AgentPrice</span>
                </th>
                                <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Total Value</span>
                </th>
                                <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Invoice No</span>
                </th>
                           <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Invoice Date</span>
                </th>
                           <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Dispatch Date</span>
                </th>
                           <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Remarks</span>
                </th>
                     
                           <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Dispatch</span>
                </th>
                     @*      <th style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px; padding-bottom: 5px; padding-top: 5px">
                    <span style="font-family: Calibri; font-size: 18px; padding-bottom: 10px; padding-top: 10px">Discontinue</span>
                </th>*@
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px">
                        @slno
                    </td>
                    <td style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px">
                                    @Html.DisplayFor(modelItem => item.OutwardMonth)
                    </td>
                                        <td style="width: 130px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.DisplayFor(modelItem => item.CustomerName)
                    </td>
                                        <td style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px">
                                    @Html.DisplayFor(modelItem => item.OrderNo)
                    </td>

                    <td style="width: 250px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.DisplayFor(modelItem => item.ProductModelSpare.ProductModelSparesName)
                    </td>
                    <td style="width: 250px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.DisplayFor(modelItem => item.ProductModelSpare.ProductModelSparesDesc)
                    </td>
                    <td style="width: 70px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td style="width: 70px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.DisplayFor(modelItem => item.ProductModelSpare.AgentPrice)
                    </td>
                    <td style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.DisplayFor(modelItem => item.TotalValue)
                    </td>
                                        <td style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.DisplayFor(modelItem => item.InvoiceNo)
                    </td>
                                        <td style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.DisplayFor(modelItem => item.InvoiceDate)
                    </td>
                                        <td style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.DisplayFor(modelItem => item.DispatchDate)
                    </td>
                                        <td style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.DisplayFor(modelItem => item.Remarks)
                    </td>
                    <td style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px">

                        @Html.ActionLink("Dispatch", "ModifyOutward", "Outward", new { id = item.OutwardID }, new { @class = "btn btn-success", @Style = "text-decoration:none" }) 
                    </td>

@*                    <td style="width: 80px; text-align: center; font-family: Calibri; font-size: 18px">
                        @Html.ActionLink("Discontinue", "Discontinue","Inward", new { id=item.OutwardID }, new { @class = "btn btn-success", @Style = "text-decoration:none" })
                    </td>*@
                </tr>
                slno++;
            }

        </table>
      @*  <div class="pagination" style="font-size: 18px; font-family: Calibri;float:right;padding-right:70px">
            Page: 
            @pageLinks()
        </div>*@
    </form>
</div>
<script type="text/javascript">
    $(function () {
        $('#datepicker').datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'MM yy',
            onClose: function (dateText, inst) {
                var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                $(this).datepicker('setDate', new Date(year, month, 1));
            },
            beforeShow: function (input, inst) {
                if ((datestr = $(this).val()).length > 0) {
                    year = datestr.substring(datestr.length - 4, datestr.length);
                    month = jQuery.inArray(datestr.substring(0, datestr.length - 5), $(this).datepicker('option', 'monthNames'));
                    $(this).datepicker('option', 'defaultDate', new Date(year, month, 1));
                    $(this).datepicker('setDate', new Date(year, month, 1));
                }
            }
        });
    });
</script>
