@model SRKSSynergy.Models.InwardSpare

@{
    ViewBag.Title = "Modify Inward";
}

<link href="~/Content/bootstrap/css/bootstrap-responsive.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/bootstrap.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/MDB.css" rel="stylesheet" />
<link href="~/Content/bootstrap/css/jquery-min.css" rel="stylesheet" />
@*<link href="~/Content/bootstrap/css/datepicker.css" rel="stylesheet" />*@
<script src="~/Content/bootstrap/js/jquery.js"></script>
<script src="~/Content/bootstrap/js/jquery-ui-min.js"></script>
@*<script src="~/Content/bootstrap/js/bootstrap-datepicker.js"></script>*@
<script src="~/Content/bootstrap/js/bootstrap.js"></script>
<script src="~/Content/bootstrap/js/accounting.js"></script>
<script src="~/Content/bootstrap/js/jquery.mtz.monthpicker.js"></script>
<style>
    .validation-summary-valid {
        display: none;
    }
</style>
<script>
    $(document).ready(function () {
        $('#startdate').monthpicker();

    });
</script>

@{
	List<SelectListItem> listItems1 = new List<SelectListItem>();
	listItems1.Add(new SelectListItem
		 {
			 Text = "1",
			 Value = "1"
		 });
	listItems1.Add(new SelectListItem
		 {
			 Text = "2",
			 Value = "2",
		 });
	listItems1.Add(new SelectListItem
		 {
			 Text = "3",
			 Value = "3"
		 });
	listItems1.Add(new SelectListItem
	{
		Text = "4",
		Value = "4"
	});
	listItems1.Add(new SelectListItem
	{
		Text = "5",
		Value = "5"
	});
	listItems1.Add(new SelectListItem
	{
		Text = "6",
		Value = "6"
	});
	listItems1.Add(new SelectListItem
	{
		Text = "7",
		Value = "7"
	});
	listItems1.Add(new SelectListItem
	{
		Text = "8",
		Value = "8"
	});
	listItems1.Add(new SelectListItem
	{
		Text = "9",
		Value = "9"
	});
	listItems1.Add(new SelectListItem
	{
		Text = "10",
		Value = "10"
	});
    }

@{
	List<SelectListItem> listItems2 = new List<SelectListItem>();
	listItems2.Add(new SelectListItem
		 {
			 Text = "PO",
			 Value = "PO"
		 });
	listItems2.Add(new SelectListItem
		 {
			 Text = "FOC",
			 Value = "FOC",
		 });
    }
<div class="bcgr" style="min-height: 590px">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div style="background: gray; padding-bottom: 15px">
            <p class="txtft">Create Inward Spare</p>
        </div>
@*<div class="bcgr">*@ 
        <div class="row" style="padding-top: 10px">
            <div class=" rowgrid">
                <div class="span10 pad">
<div class="span3">
                        <div class="control-group">
                            <label class="control-label fntst">PresentStock</label>
                            <div class="controls">
                            @Html.TextBoxFor(model => model.ProductModelSpare.BuhlerPresentStock ,new { @id= "startdate1",@name ="startdate",@placeholder="Present Stock",@class="fntst date-picker"})
                            </div>
                        </div>
                    </div>
                    
                   @Html.TextBoxFor(model => model.InwardID, new { @id= "inwardid",@name ="inwardid",@placeholder="Select Month",@class="hidden"})
                                        <div class="span1"></div>
                    <div class="span3">
                        <div class="control-group">
                            <label class="control-label fntst">Month</label>
                            <div class="controls">
                                @Html.TextBoxFor(model => model.InwardMonth, new { @id= "startdate",@name ="startdate",@placeholder="Select Month",@class="fntst date-picker"})
                            </div>
                        </div>
                    </div>
                    </div>


                   

                


                <div class="span10 pad">
                                        <div class="span3">
                        <div class="control-group">
                            <label class="control-label fntst">PO Number</label>
                            <div class="controls">
                                @*<input type="text" class="fntst" id="brnm" placeholder="Branch Name">*@
                                @Html.TextBoxFor(model => model.PONumber, new { @id = "equip", @maxlength = "20", @class = "fntst", @placeholder = "Equipment Name" })
                                @Html.ValidationMessageFor(model => model.InwardType)
                            </div>
                        </div>
                    </div>
                     <div class="span1"></div>
                    <div class="span3">
                        <div class="control-group">
                            <label class="control-label fntst">Inward Type</label>
                            <div class="controls">
                                @*<input type="text" class="fntst" id="banm" placeholder="Bank Name">*@

                                 @Html.DropDownListFor(model => model.InwardType, listItems2, "-- Select Inward Type --", new { @id = "InType", @name = "InType", @required = "required" })

                            </div>
                        </div>
                    </div>
               </div>




                <div class="span10 pad">
                    <div class="span3">
                        <div class="control-group">
                            <label class="control-label fntst">Item Code</label>
                            <div class="controls">

                                @Html.DropDownListFor(model => model.ProductModelSparesID, (SelectList)ViewData["SparesID"], "--Select Item Code--", new { @id = "exclu", @maxlength = "16", @class = "input fntst", @placeholder = "Equipment Exclusions" })
                                @Html.TextBoxFor(model => model.ProductModelSparesID, new { @id = "ItemId", @style = "display:none" })

                                @Html.ValidationMessageFor(model => model.ProductModelSparesID)
                            </div>
                        </div>
                        </div>
                                           
                    <div class="span1"></div>
                                        <div class="span3">
  
                        <div class="control-group">
                            <label class="control-label fntst">Item Description</label>
                            <div class="controls">
                                   @Html.TextBoxFor(model => model.ProductModelSpare.ProductModelSparesDesc, new { @id = "desc" ,@style = "width:350px",@readonly="readonly",@placeholder="Item Description"})
                              @*  <input type="text" class="fntst" id="desc" name="desc" value="" style="width:800px;", readonly="readonly",  placeholder="Item Description">*@
                            </div>
                        </div>
                    
                </div>
                    </div>
                <div class="span20 pad">
                    <div class="span3">
                        <div class="control-group">
                            <label class="control-label fntst">Quantity Ordered</label>
                            <div class="controls">
                                @*<input type="text" id="datePicker2" class="input-mini2" placeholder="Select Date">*@
                                @*								    @Html.TextBoxFor(model => model.QuantityOrdered, new { id = "quantity", @class = "input fntst", @placeholder = "Quantity Ordered"})
								    @Html.ValidationMessageFor(model => model.QuantityOrdered)*@

                                @Html.DropDownListFor(model => model.QuantityOrdered, listItems1, "-- Select Quantity --", new { @id = "quantity", @name = "quantity", @required = "required" })
                                @*<select name="quantity" id="quantity" disabled="disabled" >

                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                    <option value="6">6</option>
                                    <option value="7">7</option>
                                    <option value="8">8</option>
                                    <option value="9">9</option>
                                    <option value="10">10</option>

                                </select>*@
                            </div>
                        </div>
                        </div>
                    
                    <div class="span1"></div>
                    <div class="span3">
                        <div class="control-group">
                            <label class="control-label fntst">Agent Price</label>
                            <div class="controls">
                                 @Html.TextBoxFor(model => model.ProductModelSpare.AgentPrice, new { @id = "Agent" ,@readonly="readonly",@placeholder="Agent price"})
                             @*   <input type="text" class="fntst" id="Agent" name="Agent" value="@ViewBag.Agentprice" readonly="readonly"  placeholder="Agent price">*@
                                @*								    @Html.TextBoxFor(model => model.InwardType, new { @id = "equip", @maxlength = "20", @class = "fntst", @placeholder = "Equipment Name" })*@
                              
                            </div>
                        </div>
                        </div>
                                        <div class="span1"></div>
                    <div class="span3">
                        <div class="control-group">
                            <label class="control-label fntst">Total Value</label>
                            <div class="controls">
@*                                <input type="text" class="fntst" id="TotVal"  name="TotVal" value="TotVal" placeholder="Total Value"  readonly="true">*@
                             @Html.TextBoxFor(model => model.TotalValue, new { @id = "TotVal", @maxlength = "20", @class = "fntst", @placeholder = "Total Value", @readonly="readonly" })
                         
                            </div>
                        </div>
                    </div>
                </div>

                <div class="span10 pad ">
                    <div class="span3 cent" style="padding-left: 300px">
                        <button class="btn btn-success" value="create" type="submit">Save Inward</button>
                    </div>
                    <p style="color: red; font-family: Calibri; font-size: 18px; font-weight: 900">
                        @Html.Label("", Convert.ToString((string)ViewBag.Duplicate))
                    </p>
                </div>

            </div>
        </div>
	
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@*@section Scripts {
	    @Scripts.Render("~/bundles/jqueryval")
    }*@
@*<script type="text/javascript">
    $(function () {
        $("#datepicker").datepicker({
            format: "mm-yyyy",
            viewMode: "months",
            minViewMode: "months"
        });
    });
</script>*@

@*<script>
    $(document).ready(function () {
            $('.date-picker').datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'MM yy',
                onClose: function (dateText, inst) {
                    var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).datepicker('setDate', new Date(year, month, 1));

                }
            });
    });
</script>*@
<style>
    .ui-datepicker-calendar {
        display: none;
    }
</style>
<script>
    $("#exclu").change(function (evt) {
			{
			    $("#desc").val('-- Item Description --');
			    $("#Agent").val('');
			    $("#TotVal").val('');
			    $("#quantity").val('-- Select Quantity --');
			    $("#exclu").attr("disabled", false);
			    var selectedID = $("#exclu option:selected").val();
				$.getJSON("/Inward/GetItemDescription", { ID: selectedID }, function (data) {
					//Assiginig Values of Unit Price Description & Exclusion After Selecting Model
				    $("#desc").val(data.Desc);
				    $("#Agent").val(accounting.formatMoney(data.unitprice));
				    $("#quantity").attr("disabled", false);



				});
			}
		});
    </script>

<script>
    $(document).ready(function () {
        $('#quantity').change(function () {
            var passval1 = $(':selected', this).val();
            $('#quantity').val(passval1);
            var unitprice = $("#Agent").val();
            if (accounting.unformat(unitprice) != null || accounting.unformat(unitprice) != "" || accounting.unformat(unitprice) != 0) {
                var totalprice = passval1 * accounting.unformat(unitprice);
                $('#TotVal').val(accounting.formatMoney(totalprice));
                //t2 = accounting.unformat(totalprice);
                //var t12 = accounting.unformat($("#totpr").val()) + accounting.unformat($("#totpr1").val()) + accounting.unformat($("#totpr2").val()) + accounting.unformat($("#totpr3").val());
                //$("#total").val(accounting.formatMoney(t12));
            }
        });
    });

    </script>

